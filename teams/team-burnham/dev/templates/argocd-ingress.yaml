apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-ingress
  namespace: argocd
  labels:
    app: argocd-{{ .Values.spec.env }}
    team: burnham
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS": 443}]'
    #alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-3:382076407153:certificate/4f12deae-5b63-4ac2-a958-2acd4a8f2c1b
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/group.name: 'eks-blueprint-dev'
    alb.ingress.kubernetes.io/target-type: 'ip'
    alb.ingress.kubernetes.io/backend-protocol: 'HTTP'
    link.argocd.argoproj.io/external-link: 'https://eu-west-3.console.aws.amazon.com/cloudwatch/home?region=eu-west-3#container-insights:performance'
spec:
  rules:
{{ if .Values.spec.ingress.host }}  
    - host: argocd.{{ .Values.spec.ingress.host }}
{{ else }}  
    - host: 
{{ end }}    
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: blueprints-addon-argocd-server
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-ingress-nginx
  namespace: argocd
  labels:
    app: argocd-{{ .Values.spec.env }}
    team: burnham
  annotations:
    kubernetes.io/ingress.class: 'nginx'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/ssl-passthrough: 'true'
spec:
  rules:
    - host: argocdnginx.{{ .Values.spec.ingress.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: blueprints-addon-argocd-server
                port:
                  number: 80
